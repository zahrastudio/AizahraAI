import os
import pickle
from google_auth_oauthlib.flow import InstalledAppFlow
from googleapiclient.discovery import build
from googleapiclient.http import MediaFileUpload

# Scope upload video YouTube
SCOPES = ["https://www.googleapis.com/auth/youtube.upload"]

CLIENT_SECRETS_FILE = "client_secret.json"  # Download dari Google Cloud Console OAuth 2.0 Client ID
API_SERVICE_NAME = "youtube"
API_VERSION = "v3"

def get_authenticated_service():
    credentials = None
    if os.path.exists("token.pickle"):
        with open("token.pickle", "rb") as token:
            credentials = pickle.load(token)
    if not credentials or not credentials.valid:
        flow = InstalledAppFlow.from_client_secrets_file(
            CLIENT_SECRETS_FILE, SCOPES)
        credentials = flow.run_console()
        with open("token.pickle", "wb") as token:
            pickle.dump(credentials, token)
    return build(API_SERVICE_NAME, API_VERSION, credentials=credentials)

def upload_video(youtube, file_path, title="Video AizahraAI", description="Video generated by AizahraAI", tags=None, category_id="22", privacy_status="private"):
    body = {
        "snippet": {
            "title": title,
            "description": description,
            "tags": tags or ["AizahraAI", "AI", "video"],
            "categoryId": category_id,
        },
        "status": {
            "privacyStatus": privacy_status,
        }
    }
    media = MediaFileUpload(file_path, chunksize=-1, resumable=True)
    request = youtube.videos().insert(part="snippet,status", body=body, media_body=media)

    response = None
    while response is None:
        status, response = request.next_chunk()
        if status:
            print(f"Uploading... {int(status.progress() * 100)}%")
    print("Upload selesai! Video ID:", response["id"])
    return response["id"]

if __name__ == "__main__":
    youtube = get_authenticated_service()
    video_file = os.path.expanduser("~/aizahraai_output/output.mp4")
    upload_video(youtube, video_file)

