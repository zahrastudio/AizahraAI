import os
from openai import OpenAI, OpenAIError

# Daftar API key yang kamu punya (bisa juga load dari file/env)
api_keys = {
    "YouTube API": "AIzaSyDHZcA5tp48hjsLnFbDGxpyoEyT6LDqfoA",
    "OpenAI": "***REMOVED***proj-J0OTQLFJuYt0NUGQBKhljWssFJvaK5k9JScmSYwFObZysctLhe6fcxPg1jT5BaRuLHAuuof_snT3BlbkFJWkNnnEuhF4b7DB9K7P_h3b5Rzk2kwiHpGGAHljB3r0yXtZq5gDFRNI83hAZmjClEWi1xAplmUA",
    # Tambahkan key lain di sini jika mau
}

def pilih_api_key():
    print("Pilih API Key yang ingin diaktifkan:")
    for i, key_name in enumerate(api_keys.keys(), 1):
        print(f"{i}. {key_name}")
    pilihan = input("Nomor pilihan: ")
    try:
        pilihan_int = int(pilihan)
        key_name = list(api_keys.keys())[pilihan_int - 1]
        key_value = api_keys[key_name]
        os.environ["OPENAI_API_KEY"] = key_value
        print(f"API Key '{key_name}' berhasil diaktifkan.")
        return key_value
    except (ValueError, IndexError):
        print("Pilihan tidak valid.")
        return None

def main():
    openai_api_key = pilih_api_key()
    if not openai_api_key:
        print("Tidak ada API key aktif, keluar program.")
        return

    client = OpenAI(api_key=openai_api_key)
    chat_history = []

    print("\n===== AizahraAI Chat =====")
    print("Ketik pesan untuk chat dengan AI.")
    print("Perintah khusus:")
    print("  /help  - Bantuan")
    print("  /reset - Reset sesi chat")
    print("  /exit  - Keluar program\n")

    while True:
        user_input = input("Anda: ").strip()
        if not user_input:
            continue
        if user_input == "/help":
            print("Perintah khusus:")
            print("  /help  - Tampilkan bantuan ini")
            print("  /reset - Reset sesi chat")
            print("  /exit  - Keluar program")
            continue
        if user_input == "/reset":
            chat_history.clear()
            print("Riwayat chat telah direset.")
            continue
        if user_input == "/exit":
            print("Keluar dari program. Sampai jumpa!")
            break

        # Tambah pesan user ke chat history
        chat_history.append({"role": "user", "content": user_input})

        try:
            response = client.chat.completions.create(
                model="gpt-4o-mini",
                messages=chat_history,
                max_tokens=500,
                temperature=0.7,
            )
            assistant_reply = response.choices[0].message.content
            print(f"AizahraAI: {assistant_reply}")

            # Tambah balasan AI ke chat history
            chat_history.append({"role": "assistant", "content": assistant_reply})

        except OpenAIError as e:
            print(f"Error OpenAI API: {e}")
            # Tidak menambah ke chat history jika error

if __name__ == "__main__":
    main()

